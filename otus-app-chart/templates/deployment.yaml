apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otus-app-chart.fullname" . }}
  labels:
    {{- include "otus-app-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "otus-app-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "otus-app-chart.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/app-config.yaml") . | sha256sum }}
    spec:
      initContainers:
        - name: check-db-ready
          image: postgres:11-alpine
          command: ['sh', '-c',
                    'until pg_isready -h {{ (include "postgresql.fullname" .) }} -p 5432;
                do echo waiting for database; sleep 2; done;']
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image }}
          env:
            - name: PYTHONUNBUFFERED
              value: "0"
          ports:
            - name: http
              containerPort: 8000
          livenessProbe:
            httpGet:
              port: 8000
              path: /
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              port: 8000
              path: /health
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: otus-app-config-volume
              mountPath: /app/config
      volumes:
        - name: otus-app-config-volume
          configMap:
            name: otus-app-config